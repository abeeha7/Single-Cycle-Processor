module Instruction_Memory
(
	input [63:0] Inst_Address,
	output reg [31:0] Instruction
);
	reg [7:0] inst_mem [87:0];
	
	initial
	begin

		inst_mem[0]=8'b00010011; 

		inst_mem[1]=8'b00001011; 

		inst_mem[2]=8'b01000000; 

		inst_mem[3]=8'b00000000; 

		inst_mem[4]=8'b10010011; 

		inst_mem[5]=8'b00001001; 

		inst_mem[6]=8'b00000000; 

		inst_mem[7]=8'b00000000;

		inst_mem[8]=8'b01100011 ; 

		inst_mem[9]=8'b11011000; 

		inst_mem[10]=8'b01101001; 

		inst_mem[11]=8'b00000101; 

		 

		inst_mem[12]=8'b00010011 ; 

		inst_mem[13]=8'b10001010; 

		inst_mem[14]=8'b11111001; 

		inst_mem[15]=8'b11111111; 

		inst_mem[16]=8'b01100011 ; // loop 2 , start from here 

		inst_mem[17]=8'b01000010; 

		inst_mem[18]=8'b00001010; 

		inst_mem[19]=8'b00000010; 

		inst_mem[20]=8'b00010011 ; 

		inst_mem[21]=8'b00010101 ; 

		inst_mem[22]=8'b00111010; 

		inst_mem[23]=8'b00000000; 

		inst_mem[24]=8'b00110011 ; 

		inst_mem[25]=8'b00000101 ; 

		inst_mem[26]=8'b01010101; 

		inst_mem[27]=8'b00000001; 

		inst_mem[28]=8'b10000011  ; 

		inst_mem[29]=8'b00111110 ; 

		inst_mem[30]=8'b00000101; 

		inst_mem[31]=8'b00000000; 

		inst_mem[32]=8'b00000011  ; 

		inst_mem[33]=8'b00111111  ; 

		inst_mem[34]=8'b10000101; 

		inst_mem[35]=8'b00000000; 

		inst_mem[36]=8'b01100011    ; 

		inst_mem[37]=8'b01011000  ; 

		inst_mem[38]=8'b11011111; 

		inst_mem[39]=8'b00000001; 

		inst_mem[40]=8'b01100011    ; 

		inst_mem[41]=8'b00001010  ; 

		inst_mem[42]=8'b00000000; 

		inst_mem[43]=8'b00000000; 

		inst_mem[44]=8'b00010011   ; 

		inst_mem[45]=8'b00001010  ; 

		inst_mem[46]=8'b11111010; 
		
		inst_mem[47]=8'b11111111; 
		
		inst_mem[48]=8'b11100011    ; 

		inst_mem[49]=8'b00000000  ; 

		inst_mem[50]=8'b00000000; 

		inst_mem[51]=8'b11111110;  

		inst_mem[52]=8'b10010011; 

		inst_mem[53]=8'b10001001 ; 

		inst_mem[54]=8'b00011001; 

		inst_mem[55]=8'b00000000; 
		
		inst_mem[56]=8'b11100011 ; 

		inst_mem[57]=8'b00001000 ; 

		inst_mem[58]=8'b00000000; 

		inst_mem[59]=8'b11111100; 

		inst_mem[60]=8'b00010011; 

		inst_mem[61]=8'b10010011; 

		inst_mem[62]=8'b00110101; 

		inst_mem[63]=8'b00000000; 

		inst_mem[64]=8'b00110011; 

		inst_mem[65]=8'b00000011; 

		inst_mem[66]=8'b01100101; 

		inst_mem[67]=8'b00000000; 

		inst_mem[68]=8'b10000011; 

		inst_mem[69]=8'b00110010; 

		inst_mem[70]=8'b00000011; 

		inst_mem[71]=8'b00000000; 

		inst_mem[72]=8'b10000011; 

		inst_mem[73]=8'b00110011; 

		inst_mem[74]=8'b10000011; 

		inst_mem[75]=8'b00000000; 

		inst_mem[76]=8'b00100011 ; 

		inst_mem[77]=8'b00110000; 

		inst_mem[78]=8'b01110011; 

		inst_mem[79]=8'b00000000; 

		inst_mem[80]=8'b00100011; 

		inst_mem[81]=8'b00110100 ; 

		inst_mem[82]=8'b01010011; 

		inst_mem[83]=8'b00000000; 

		inst_mem[84]=8'b11100011 ; 

		inst_mem[85]=8'b00001100 ; 

		inst_mem[86]=8'b00000000 ; 

		inst_mem[87]=8'b11111100; 

		 
		
		
	end
	
	
	always @(Inst_Address)
	begin
		Instruction={inst_mem[Inst_Address+3],inst_mem[Inst_Address+2],inst_mem[Inst_Address+1],inst_mem[Inst_Address]};
	end
endmodule
